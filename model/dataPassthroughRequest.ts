/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { MethodEnum } from './methodEnum';
import { RequestFormatEnum } from './requestFormatEnum';

/**
* # The DataPassthrough Object ### Description The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.  ### Usage Example Create a `DataPassthrough` to get team hierarchies from your Rippling integration.
*/
export class DataPassthroughRequest {
    'method': MethodEnum;
    'path': string;
    'base_url_override'?: string | null;
    'data'?: string | null;
    'headers'?: { [key: string]: any; } | null;
    'request_format'?: RequestFormatEnum | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "method",
            "baseName": "method",
            "type": "MethodEnum"
        },
        {
            "name": "path",
            "baseName": "path",
            "type": "string"
        },
        {
            "name": "base_url_override",
            "baseName": "base_url_override",
            "type": "string"
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "string"
        },
        {
            "name": "headers",
            "baseName": "headers",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "request_format",
            "baseName": "request_format",
            "type": "RequestFormatEnum"
        }    ];

    static getAttributeTypeMap() {
        return DataPassthroughRequest.attributeTypeMap;
    }
}

